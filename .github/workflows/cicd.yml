name: hospital Backend Pipeline

on:
  push:
    branches:
      - master

jobs:
  Continues-Integration_build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: SamYoha99/hospital-backend
          ref: master

      - name: Log in to Docker Registry with short-lived credentials
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build container image
        run: docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/hospital-app-backend:${{ github.run_number }} .

      - name: Push image to Docker Registry
        run: docker push docker.io/${{ secrets.DOCKER_USERNAME }}/hospital-app-backend:${{ github.run_number }}

      - name: Clean up Docker image locally
        run: docker rmi docker.io/${{ secrets.DOCKER_USERNAME }}/hospital-app-backend:${{ github.run_number }}

      - name: Clean up GitHub repo on runner
        run: rm -rf ./*

  Continues-Deployment:
    runs-on: ubuntu-latest
    needs: Continues-Integration_build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: SamYoha99/hospital-backend
          ref: master

      - name: Update Kubernetes Deployment file
        run: |
          sed -i "s+docker.io/${{ secrets.DOCKER_USERNAME }}/hospital-app-backend:.*+docker.io/${{ secrets.DOCKER_USERNAME }}/hospital-app-backend:${{ github.run_number }}+g" deployment/deploy.yaml

      - name: Authenticate to GCP
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update 
          sudo apt-get install apt-transport-https ca-certificates gnupg curl -y
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get update && sudo apt-get install google-cloud-cli -y
          sudo apt-get install google-cloud-cli-gke-gcloud-auth-plugin -y

      - name: Configure kubectl for GKE
        run: |
          gcloud container clusters get-credentials dev-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy Hospital Backend to Kubernetes
        run: |
          kubectl apply -f deployment

      - name: Wait for Pod to be Ready
        run: |
          kubectl wait --for=condition=ready pod -l app=hospital-backend --timeout=600s

      - name: Check Pod Status
        run: |
          kubectl get pods -l app=hospital-backend
          kubectl describe pod -l app=hospital-backend

      - name: Get Pod Logs for Debugging (if not running)
        run: |
          kubectl get pods -l app=hospital-backend -o name | xargs -I {} kubectl logs {} || echo "No logs available"
      
      - name: Get Kubernetes Events (if pod is stuck in ContainerCreating)
        run: |
          kubectl get events --namespace=default | grep hospital-backend || echo "No events found"
