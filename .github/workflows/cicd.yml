name: hospital Backend Pipeline

on:
  push:
    branches:
      - master

jobs:
  Continues-Integration_build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: SamYoha99/hospital-backend
          ref: main

      - name: Build container image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/hospital-app-backend:${{ github.run_number }} .

      - name: Log in to Docker Registry with short-lived credentials
        run: docker login -u ${{ secrets.REGISTRY_NAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/hospital-app-backend:${{ github.run_number }}

      - name: Clean up Docker image locally
        run: docker rmi ${{ secrets.REGISTRY_NAME }}/hospital-app-backend:${{ github.run_number }}

      - name: Clean up GitHub repo on runner
        run: rm -rf ./*

  Continues-Deployment:
    runs-on: ubuntu-latest
    needs: Continues-Integration_build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: SamYoha99/hospital-backend
          ref: main

      - name: Update Kubernetes Deployment file
        run: |
          sed -i "s+adminsam99/hospital-app-backend:.*+${{ secrets.REGISTRY_NAME }}/hospital-app-backend:${{ github.run_number }}+g" deployment/deploy.yaml

      - name: Authenticate to GCP and set up GKE
        run: |
          # Authenticate to GCP using the service account key
          echo "${{ secrets.GCP_SA_KEY }}" > $HOME/gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json

          # Install the gke-gcloud-auth-plugin for kubectl authentication
          gcloud components install gke-gcloud-auth-plugin

          # Set the Google Cloud project and region/zone
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region ${{ secrets.GCP_COMPUTE_REGION }}
          gcloud config set compute/zone ${{ secrets.GCP_COMPUTE_ZONE }}

          # Get credentials for the GKE cluster using the auth plugin
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GCP_COMPUTE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }} --authentication-plugin=gke-gcloud-auth-plugin

      - name: Deploy to GKE
        run: |
          # Apply Kubernetes configurations
          kubectl apply -f clusterissuer.yaml
          kubectl apply -f deployment/deploy.yaml

          # Sleep for 20 seconds to allow deployment to propagate
          sleep 20

          # Verify that the pod is running
          kubectl get pod
